# name: Auto Merge Dev to Main

# on:
#   push:
#     branches:
#       - dev

# permissions:
#   contents: write
#   pull-requests: write
#   actions: write  # Required for modifying workflows

# jobs:
#   merge:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  # Fetch full history for merging

#       - name: Configure Git
#         run: |
#           git config --global user.name "github-actions"
#           git config --global user.email "actions@github.com"

#       - name: Checkout main branch
#         run: |
#           git checkout main
#           git pull origin main  # Ensure the latest version

#       - name: Merge dev into main (resolve conflicts in favor of dev)
#         run: |
#           git merge dev --strategy-option=theirs || true
#           git commit -am "Auto-merging dev into main - resolved conflicts with dev's changes" || true

#       - name: Push merged changes
#         run: git push origin main
#         env:
#           GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # Use a PAT token

# name: Auto Merge Dev to Main

# on:
#   push:
#     branches:
#       - dev

# permissions:
#   contents: write
#   pull-requests: write
#   actions: write

# jobs:
#   merge:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  # Fetch full history for merging

#       - name: Configure Git
#         run: |
#           git config --global user.name "github-actions"
#           git config --global user.email "actions@github.com"

#       - name: Checkout main branch
#         run: |
#           git checkout main
#           git pull origin main  # Ensure latest version

#       - name: Merge dev into main (force merge)
#         run: |
#           git merge dev --no-edit --strategy-option=theirs || true
#           git push origin main
#         env:
#           GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # Use PAT instead of GITHUB_TOKEN

# name: Auto Merge Dev to Main

# on:
#   push:
#     branches:
#       - dev

# permissions:
#   contents: write
#   pull-requests: write
#   actions: write  # Required for modifying workflows

# jobs:
#   merge:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  # Fetch full history for merging

#       - name: Configure Git
#         run: |
#           git config --global user.name "github-actions"
#           git config --global user.email "actions@github.com"

#       - name: Checkout main branch
#         run: |
#           git checkout main
#           git pull origin main  # Ensure the latest version

#       - name: Merge dev into main (resolve conflicts in favor of dev)
#         run: |
#           git merge dev --strategy-option=theirs || true
#           git commit -am "Auto-merging dev into main - resolved conflicts with dev's changes" || true

#       - name: Push merged changes
#         run: git push origin main
#         env:
#           GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # Use a PAT token

name: Auto Merge Dev to Main and Trigger Jenkins

on:
  push:
    branches:
      - dev  # Runs when code is pushed to 'dev'

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  merge-and-trigger:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history for merging

      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

      - name: Checkout main branch
        run: |
          git checkout main
          git pull origin main  # Ensure latest version

      - name: Merge dev into main (resolve conflicts in favor of dev)
        run: |
          git merge dev --no-edit || true
          git ls-files -u | awk '{print $4}' | sort -u | xargs git checkout --theirs || true
          git add .
          git commit --allow-empty -m "Auto-merging dev into main - resolved conflicts with dev's changes"

      - name: Push merged changes to main
        run: git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  trigger-jenkins:
    needs: merge-and-trigger
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Jenkins Job
        run: |
          curl -X POST "http://192.168.1.65:8080/job/github_actions/buildWithParameters" \
               --user "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}"

